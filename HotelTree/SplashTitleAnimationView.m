//
// SplashTitleAnimationView.m
// Generated by Core Animator version 1.3.2 on 12/30/16.
//
// DO NOT MODIFY THIS FILE. IT IS AUTO-GENERATED AND WILL BE OVERWRITTEN
//

#import "SplashTitleAnimationView.h"

@interface SplashTitleAnimationPassthroughView : UIView
@end
@implementation SplashTitleAnimationPassthroughView
- (BOOL)pointInside:(CGPoint)point withEvent:(UIEvent *)event {
    for ( UIView *subview in self.subviews ) {
        if ( [subview pointInside:[self convertPoint:point toView:subview] withEvent:event]) { return true; }
    }
    return false;
}
@end

@interface SplashTitleAnimationView ()
@property (strong, nonatomic) NSMapTable *completionBlocksByAnimation;
@end

@implementation SplashTitleAnimationView

#pragma mark - Life Cycle

- (instancetype)init
{
	return [self initWithFrame:CGRectMake(0,0,192,89)];
}

- (instancetype)initWithFrame:(CGRect)frame
{
	self = [super initWithFrame:frame];
	if (self)
	{
		[self setupHierarchy];
	}
	return self;
}

- (instancetype)initWithCoder:(NSCoder *)coder
{
	self = [super initWithCoder:coder];
	if (self)
	{
		[self setupHierarchy];
	}
	return self;
}

#pragma mark - Scaling

- (void)layoutSubviews
{
	[super layoutSubviews];

	UIView *scalingView = self.viewsByName[@"__scaling__"];
	float xScale = self.bounds.size.width / scalingView.bounds.size.width;
	float yScale = self.bounds.size.height / scalingView.bounds.size.height;
	switch (self.contentMode) {
		case UIViewContentModeScaleToFill:
			break;
		case UIViewContentModeScaleAspectFill:
		{
			float scale = MAX(xScale, yScale);
			xScale = scale;
			yScale = scale;
			break;
		}
		default:
		{
			float scale = MIN(xScale, yScale);
			xScale = scale;
			yScale = scale;
			break;
		}
	}
	scalingView.transform = CGAffineTransformMakeScale(xScale, yScale);
	scalingView.center = CGPointMake(CGRectGetMidX(self.bounds), CGRectGetMidY(self.bounds));
}

#pragma mark - Setup

- (void)setupHierarchy
{
	self.completionBlocksByAnimation = [NSMapTable mapTableWithKeyOptions:NSPointerFunctionsOpaqueMemory valueOptions:NSPointerFunctionsStrongMemory];
	NSMutableDictionary *viewsByName = [NSMutableDictionary dictionary];
	NSBundle *bundle = [NSBundle bundleForClass:[self class]];

	UIView *__scaling__ = [UIView new];
	__scaling__.bounds = CGRectMake(0, 0, 192, 89);
	__scaling__.center = CGPointMake(96.4, 44.9);
	[self addSubview:__scaling__];
	viewsByName[@"__scaling__"] = __scaling__;

	SplashTitleAnimationPassthroughView *title1__root = [SplashTitleAnimationPassthroughView new];
	SplashTitleAnimationPassthroughView *title1__xScale = [SplashTitleAnimationPassthroughView new];
	SplashTitleAnimationPassthroughView *title1__yScale = [SplashTitleAnimationPassthroughView new];
	UIImageView *title1 = [UIImageView new];
	UIImage *imgTitle1 = [UIImage imageNamed:@"title1.png" inBundle:bundle compatibleWithTraitCollection:nil];
	if ( imgTitle1 == nil ) { NSLog(@"** Warning: Could not create image from 'title1.png'."); }
	title1.image = imgTitle1;
	title1.contentMode = UIViewContentModeCenter;
	title1.bounds = CGRectMake(0, 0, 88.0, 41.0);
	title1__root.layer.position = CGPointMake(44.000, 44.888);
	title1__xScale.transform = CGAffineTransformMakeScale(1.00, 1.00);
	title1__yScale.transform = CGAffineTransformMakeScale(1.00, 1.00);
	title1__root.transform = CGAffineTransformMakeRotation(0.000);
	[__scaling__ addSubview:title1__root];
	[title1__root addSubview:title1__xScale];
	[title1__xScale addSubview:title1__yScale];
	[title1__yScale addSubview:title1];
	[__scaling__ addSubview:title1__root];
	viewsByName[@"title1__root"] = title1__root;
	viewsByName[@"title1__xScale"] = title1__xScale;
	viewsByName[@"title1__yScale"] = title1__yScale;
	viewsByName[@"title1"] = title1;

	SplashTitleAnimationPassthroughView *title2__root = [SplashTitleAnimationPassthroughView new];
	SplashTitleAnimationPassthroughView *title2__xScale = [SplashTitleAnimationPassthroughView new];
	SplashTitleAnimationPassthroughView *title2__yScale = [SplashTitleAnimationPassthroughView new];
	UIImageView *title2 = [UIImageView new];
	UIImage *imgTitle2 = [UIImage imageNamed:@"title2.png" inBundle:bundle compatibleWithTraitCollection:nil];
	if ( imgTitle2 == nil ) { NSLog(@"** Warning: Could not create image from 'title2.png'."); }
	title2.image = imgTitle2;
	title2.contentMode = UIViewContentModeCenter;
	title2.bounds = CGRectMake(0, 0, 52.0, 68.0);
	title2__root.layer.position = CGPointMake(108.981, 34.000);
	title2__xScale.transform = CGAffineTransformMakeScale(1.00, 1.00);
	title2__yScale.transform = CGAffineTransformMakeScale(1.00, 1.00);
	title2__root.transform = CGAffineTransformMakeRotation(0.000);
	[__scaling__ addSubview:title2__root];
	[title2__root addSubview:title2__xScale];
	[title2__xScale addSubview:title2__yScale];
	[title2__yScale addSubview:title2];
	[__scaling__ addSubview:title2__root];
	viewsByName[@"title2__root"] = title2__root;
	viewsByName[@"title2__xScale"] = title2__xScale;
	viewsByName[@"title2__yScale"] = title2__yScale;
	viewsByName[@"title2"] = title2;

	SplashTitleAnimationPassthroughView *title3__root = [SplashTitleAnimationPassthroughView new];
	SplashTitleAnimationPassthroughView *title3__xScale = [SplashTitleAnimationPassthroughView new];
	SplashTitleAnimationPassthroughView *title3__yScale = [SplashTitleAnimationPassthroughView new];
	UIImageView *title3 = [UIImageView new];
	UIImage *imgTitle3 = [UIImage imageNamed:@"title3.png" inBundle:bundle compatibleWithTraitCollection:nil];
	if ( imgTitle3 == nil ) { NSLog(@"** Warning: Could not create image from 'title3.png'."); }
	title3.image = imgTitle3;
	title3.contentMode = UIViewContentModeCenter;
	title3.layer.anchorPoint = CGPointMake(-0.024, 0.959);
	title3.bounds = CGRectMake(0, 0, 43.0, 19.0);
	title3__root.layer.position = CGPointMake(136.042, 53.602);
	title3__xScale.transform = CGAffineTransformMakeScale(1.00, 1.00);
	title3__yScale.transform = CGAffineTransformMakeScale(1.00, 1.00);
	title3__root.transform = CGAffineTransformMakeRotation(0.000);
	[__scaling__ addSubview:title3__root];
	[title3__root addSubview:title3__xScale];
	[title3__xScale addSubview:title3__yScale];
	[title3__yScale addSubview:title3];
	[__scaling__ addSubview:title3__root];
	viewsByName[@"title3__root"] = title3__root;
	viewsByName[@"title3__xScale"] = title3__xScale;
	viewsByName[@"title3__yScale"] = title3__yScale;
	viewsByName[@"title3"] = title3;

	self.viewsByName = viewsByName;
}

#pragma mark - Untitled Animation

- (void)addUntitledAnimation
{
	[self addUntitledAnimationWithBeginTime:0 andFillMode:kCAFillModeBoth andRemoveOnCompletion:NO completion:NULL];
}

- (void)addUntitledAnimationWithCompletion:(void (^)(BOOL finished))completionBlock
{
	[self addUntitledAnimationWithBeginTime:0 andFillMode:kCAFillModeBoth andRemoveOnCompletion:NO completion:completionBlock];
}

- (void)addUntitledAnimationAndRemoveOnCompletion:(BOOL)removedOnCompletion
{
	[self addUntitledAnimationWithBeginTime:0 andFillMode:removedOnCompletion ? kCAFillModeRemoved : kCAFillModeBoth andRemoveOnCompletion:removedOnCompletion completion:NULL];
}

- (void)addUntitledAnimationAndRemoveOnCompletion:(BOOL)removedOnCompletion completion:(void (^)(BOOL finished))completionBlock
{
	[self addUntitledAnimationWithBeginTime:0 andFillMode:removedOnCompletion ? kCAFillModeRemoved : kCAFillModeBoth andRemoveOnCompletion:removedOnCompletion completion:completionBlock];
}

- (void)addUntitledAnimationWithBeginTime:(CFTimeInterval)beginTime andFillMode:(NSString *)fillMode andRemoveOnCompletion:(BOOL)removedOnCompletion completion:(void (^)(BOOL finished))completionBlock
{
	CAMediaTimingFunction *linearTiming = [CAMediaTimingFunction functionWithName:kCAMediaTimingFunctionLinear];
	CAMediaTimingFunction *easeOutTiming = [CAMediaTimingFunction functionWithName:kCAMediaTimingFunctionEaseOut];
	CAMediaTimingFunction *overshootTiming = [CAMediaTimingFunction functionWithControlPoints:0.00 :0.00 :0.58 :1.30];
	CAMediaTimingFunction *easeInTiming = [CAMediaTimingFunction functionWithName:kCAMediaTimingFunctionEaseIn];

	if (completionBlock)
	{
		CABasicAnimation *representativeAnimation = [CABasicAnimation animationWithKeyPath:@"not.a.real.key"];
		representativeAnimation.duration = 3.250;
		representativeAnimation.delegate = self;
		[self.layer addAnimation:representativeAnimation forKey:@"UntitledAnimation"];
		[self.completionBlocksByAnimation setObject:completionBlock forKey:[self.layer animationForKey:@"UntitledAnimation"]];
	}

	CAKeyframeAnimation *title2ScaleXAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.scale.x"];
	title2ScaleXAnimation.duration = 3.250;
	title2ScaleXAnimation.values = @[@(1.000), @(1.000), @(0.765), @(1.000)];
	title2ScaleXAnimation.keyTimes = @[@(0.000), @(0.615), @(0.846), @(1.000)];
	title2ScaleXAnimation.timingFunctions = @[linearTiming, overshootTiming, easeOutTiming];
	title2ScaleXAnimation.beginTime = beginTime;
	title2ScaleXAnimation.fillMode = fillMode;
	title2ScaleXAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"title2__xScale"] layer] addAnimation:title2ScaleXAnimation forKey:@"Untitled Animation_ScaleX"];

	CAKeyframeAnimation *title2ScaleYAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.scale.y"];
	title2ScaleYAnimation.duration = 3.250;
	title2ScaleYAnimation.values = @[@(1.000), @(1.000), @(1.063), @(1.000)];
	title2ScaleYAnimation.keyTimes = @[@(0.000), @(0.615), @(0.846), @(1.000)];
	title2ScaleYAnimation.timingFunctions = @[linearTiming, overshootTiming, easeOutTiming];
	title2ScaleYAnimation.beginTime = beginTime;
	title2ScaleYAnimation.fillMode = fillMode;
	title2ScaleYAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"title2__yScale"] layer] addAnimation:title2ScaleYAnimation forKey:@"Untitled Animation_ScaleY"];

	CAKeyframeAnimation *title2TranslationXAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.translation.x"];
	title2TranslationXAnimation.duration = 3.250;
	title2TranslationXAnimation.values = @[@(370.958), @(-4.518), @(-8.484), @(-4.011)];
	title2TranslationXAnimation.keyTimes = @[@(0.000), @(0.615), @(0.846), @(1.000)];
	title2TranslationXAnimation.timingFunctions = @[easeInTiming, overshootTiming, easeOutTiming];
	title2TranslationXAnimation.beginTime = beginTime;
	title2TranslationXAnimation.fillMode = fillMode;
	title2TranslationXAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"title2__root"] layer] addAnimation:title2TranslationXAnimation forKey:@"Untitled Animation_TranslationX"];

	CAKeyframeAnimation *title3RotationAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.rotation.z"];
	title3RotationAnimation.duration = 3.250;
	title3RotationAnimation.values = @[@(0.000), @(0.000), @(-0.308), @(0.000)];
	title3RotationAnimation.keyTimes = @[@(0.000), @(0.615), @(0.846), @(1.000)];
	title3RotationAnimation.timingFunctions = @[linearTiming, overshootTiming, easeOutTiming];
	title3RotationAnimation.beginTime = beginTime;
	title3RotationAnimation.fillMode = fillMode;
	title3RotationAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"title3__root"] layer] addAnimation:title3RotationAnimation forKey:@"Untitled Animation_Rotation"];

	CAKeyframeAnimation *title3TranslationXAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.translation.x"];
	title3TranslationXAnimation.duration = 3.250;
	title3TranslationXAnimation.values = @[@(369.888), @(-6.485), @(-13.547), @(-3.938)];
	title3TranslationXAnimation.keyTimes = @[@(0.000), @(0.615), @(0.846), @(1.000)];
	title3TranslationXAnimation.timingFunctions = @[easeInTiming, overshootTiming, easeOutTiming];
	title3TranslationXAnimation.beginTime = beginTime;
	title3TranslationXAnimation.fillMode = fillMode;
	title3TranslationXAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"title3__root"] layer] addAnimation:title3TranslationXAnimation forKey:@"Untitled Animation_TranslationX"];
}

- (void)removeUntitledAnimation
{
	[self.layer removeAnimationForKey:@"UntitledAnimation"];
	[[self.viewsByName[@"title2__xScale"] layer] removeAnimationForKey:@"Untitled Animation_ScaleX"];
	[[self.viewsByName[@"title2__yScale"] layer] removeAnimationForKey:@"Untitled Animation_ScaleY"];
	[[self.viewsByName[@"title2__root"] layer] removeAnimationForKey:@"Untitled Animation_TranslationX"];
	[[self.viewsByName[@"title3__root"] layer] removeAnimationForKey:@"Untitled Animation_Rotation"];
	[[self.viewsByName[@"title3__root"] layer] removeAnimationForKey:@"Untitled Animation_TranslationX"];
}

- (void)animationDidStop:(CAAnimation *)anim finished:(BOOL)flag
{
	void (^completion)(BOOL) = [self.completionBlocksByAnimation objectForKey:anim];
	[self.completionBlocksByAnimation removeObjectForKey:anim];
	if (completion)
	{
		completion(flag);
	}
}

- (void)removeAllAnimations
{
	for (UIView *view in self.viewsByName.allValues)
	{
		[view.layer removeAllAnimations];
	}
	[self.layer removeAnimationForKey:@"UntitledAnimation"];
}

@end